% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.dataFrameSort.R
\name{ds.dataFrameSort}
\alias{ds.dataFrameSort}
\title{Sorting data frames in several Opal servers}
\usage{
ds.dataFrameSort(
  df.name = NULL,
  sort.key.name = NULL,
  sort.descending = FALSE,
  sort.alphabetic = FALSE,
  sort.numeric = FALSE,
  newobj = NULL,
  datasources = NULL
)
}
\arguments{
\item{df.name}{a character string providing the name for the data frame.
to be sorted}

\item{sort.key.name}{a character string providing the name for the sort key.}

\item{sort.descending}{logical, if TRUE the data frame will be sorted.
by the sort key in descending order. Default = FALSE (sort order ascending)}

\item{sort.alphabetic}{logical, if TRUE the sort key is 
treated as if alphabetic Default=FALSE.}

\item{sort.numeric}{logical, if TRUE the sort key is treated as if numeric
Default=FALSE.}

\item{newobj}{a character string which provides the name for the output data frame 
that is stored on the data servers. Default \code{'dataframesort.newobj'}.   
where \code{df.name} is the first argument of \code{ds.dataFrameSort()}.}

\item{datasources}{a list of \code{\link{DSConnection-class}} 
objects obtained after login. If the \code{datasources}
the default set of connections will be used: see \link{datashield.connections_default}.}
}
\value{
th sorted dataframe is written to the serverside. 
In addition, two validity messages are returned
indicating the name of  \code{newobj} 
has been created in each data source and if so whether
it is in a valid form.
}
\description{
Sorts a data frame using a specified sort key.
}
\details{
\code{ds.dataFrameSort} sorts a specified
data.frame on the serverside using a sort key also on the serverside. The
sort key can either sit in the data.frame or outside it. 
The sort key can be forced to be interpreted as alphabetic or numeric. 

When sorting numbers in a  ascending (default) manner the negative values 
get ordered first and the missing values last. 
Instead when sorting characters the missing values get ordered first. 

Server functions called: dataFrameSortDS.
}
\examples{
\dontrun{
  ## Version 6, for version 5 see the Wiki
  
  # connecting to the Opal servers

  require('DSI')
  require('DSOpal')
  require('dsBaseClient')

  builder <- DSI::newDSLoginBuilder()
  builder$append(server = "study1", 
                 url = "http://192.168.56.100:8080/", 
                 user = "administrator", password = "datashield_test&", 
                 table = "CNSIM.CNSIM1", driver = "OpalDriver")
  builder$append(server = "study2", 
                 url = "http://192.168.56.100:8080/", 
                 user = "administrator", password = "datashield_test&", 
                 table = "CNSIM.CNSIM2", driver = "OpalDriver")
  builder$append(server = "study3",
                 url = "http://192.168.56.100:8080/", 
                 user = "administrator", password = "datashield_test&", 
                 table = "CNSIM.CNSIM3", driver = "OpalDriver")
  logindata <- builder$build()
  
  connections <- DSI::datashield.login(logins = logindata, assign = TRUE, symbol = "D") 
  
  # Sorting the data frame
  ds.dataFrameSort(df.name = "D",
                   sort.key.name = "D$LAB_TSC",
                   sort.descending = TRUE,
                   sort.alphabetic = FALSE,
                   sort.numeric = TRUE,
                   newobj = "df.sort",
                   datasources = connections)
                   
  # Clear the Datashield R sessions and logout                 
  datashield.logout(connections) 
  
}   
}
\author{
DataSHIELD Development Team
}
