% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.dataFrame.R
\name{ds.dataFrame}
\alias{ds.dataFrame}
\title{Generates a data frame object in several Opal servers}
\usage{
ds.dataFrame(
  x = NULL,
  row.names = NULL,
  check.rows = FALSE,
  check.names = TRUE,
  stringsAsFactors = TRUE,
  completeCases = FALSE,
  DataSHIELD.checks = FALSE,
  newobj = NULL,
  datasources = NULL,
  notify.of.progress = FALSE
)
}
\arguments{
\item{x}{a character string which provides the name of the objects
to be combined.}

\item{row.names}{NULL, integer or character string which provides the
row names of the output data frame}

\item{check.rows}{if TRUE then the rows are checked for consistency of
length and names. Default is FALSE.}

\item{check.names}{logical. If TRUE the colum names 
in the data frame are checked to ensure that are unique. Default is TRUE.}

\item{stringsAsFactors}{logical. If true the character vectors are
converted to factors. Default TRUE.}

\item{completeCases}{logical. If TRUE rows with one or more 
missing values will be deleted from the output data frame.
Default is FALSE.}

\item{DataSHIELD.checks}{logical. If TRUE undertakes all DataSHIELD checks (time
consuming). Default FALSE.}

\item{newobj}{a character string  which provides the name for the output data frame
that is stored on the data servers. Default \code{dataframe.newobj}.}

\item{datasources}{a list of \code{\link{DSConnection-class}} objects obtained after login. 
If the \code{datasources}
the default set of connections will be used: see \link{datashield.connections_default}.}

\item{notify.of.progress}{specifies if console output should be produce to indicate
progress. Default is FALSE.}
}
\value{
\code{ds.dataFrame} returns the object specified by the \code{newobj} argument (or default name <df_new>).
which is written to the serverside. In addition, two validity messages are returned
indicating whether \code{newobj}  has been created in each data source and if so whether
it is in a valid form. If its form is not valid in at least one study - e.g. because
a disclosure trap was tripped and creation of the full output object was blocked -
ds.dataFrame() also returns any studysideMessages that can explain the error in creating
the full output object. As well as appearing on the screen at run time,if you wish to
see the relevant studysideMessages at a later date you can use the {ds.message}
function. If you type ds.message("newobj") it will print out the relevant
studysideMessage from any datasource in which there was an error in creating <newobj>
and a studysideMessage was saved. If there was no error and <newobj> was created
without problems no studysideMessage will have been saved and ds.message("newobj")
will return the message: "ALL OK: there are no studysideMessage(s) on this datasource".
}
\description{
Creates a data frame from its elemental components: pre-existing data frames;
single variables; matrices
}
\details{
\code{ds.dataFrame} function creates a data frame by combining
pre-existing data.frames, matrices or variables.

The length of all component variables, and the number of rows 
of the  data frames or matrices must be the same.  The output 
data frame will have the same number of rows. 

Server functions called: dataFrameDS
}
\author{
DataSHIELD Development Team
}
